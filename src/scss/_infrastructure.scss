@font-face {
  font-family: 'NeutraText';
  font-weight: 400;
  src: url('fonts/neutratextbook.eot');
  src: url('fonts/neutratextbook.eot') format('embedded-opentype'),
        url('fonts/neutratextbook.woff2') format('woff2'),
        url('fonts/neutratextbook.woff') format('woff'),
        url('fonts/neutratextbook.ttf') format('truetype'),
        url('fonts/neutratextbook.svg#neutratextbook') format('svg');
}

@font-face {
  font-family: 'NeutraText';
  font-weight: 600;
  src: url('fonts/NeutraTextDemi.eot');
  src: url('fonts/NeutraTextDemi.eot') format('embedded-opentype'),
        url('fonts/NeutraTextDemi.woff2') format('woff2'),
        url('fonts/NeutraTextDemi.woff') format('woff'),
        url('fonts/NeutraTextDemi.ttf') format('truetype'),
        url('fonts/NeutraTextDemi.svg#NeutraTextDemi') format('svg');
}

@font-face {
  font-family: 'NeutraText';
  font-weight: 700;
  src: url('fonts/NeutraTextBold.eot');
  src: url('fonts/NeutraTextBold.eot') format('embedded-opentype'),
        url('fonts/NeutraTextBold.woff2') format('woff2'),
        url('fonts/NeutraTextBold.woff') format('woff'),
        url('fonts/NeutraTextBold.ttf') format('truetype'),
        url('fonts/NeutraTextBold.svg#NeutraTextBold') format('svg');
}

@font-face {
  font-family: 'itcstone';
  font-weight: 600;
  src: url('fonts/itcstoneinformalsemibold.eot');
  src: url('fonts/itcstoneinformalsemibold.eot') format('embedded-opentype'),
        url('fonts/itcstoneinformalsemibold.woff2') format('woff2'),
        url('fonts/itcstoneinformalsemibold.woff') format('woff'),
        url('fonts/itcstoneinformalsemibold.ttf') format('truetype'),
        url('fonts/itcstoneinformalsemibold.svg#itcstoneinformalsemibold') format('svg');
}

@font-face {
    font-family: 'itcstone';
    font-weight: 700;
    src: url('fonts/itcstoneinformalbold.eot');
    src: url('fonts/itcstoneinformalbold.eot') format('embedded-opentype'),
         url('fonts/itcstoneinformalbold.woff2') format('woff2'),
         url('fonts/itcstoneinformalbold.woff') format('woff'),
         url('fonts/itcstoneinformalbold.ttf') format('truetype'),
         url('fonts/itcstoneinformalbold.svg#itcstoneinformalbold') format('svg');
}

@font-face {
    font-family: 'itcstone';
    font-weight: 400;
    src: url('fonts/itcstoneinformal.eot');
    src: url('fonts/itcstoneinformal.eot') format('embedded-opentype'),
         url('fonts/itcstoneinformal.woff2') format('woff2'),
         url('fonts/itcstoneinformal.woff') format('woff'),
         url('fonts/itcstoneinformal.ttf') format('truetype'),
         url('fonts/itcstoneinformal.svg#itcstoneinformal') format('svg');
}



@include normalize();

::-moz-selection {
   color: color(greyscale, dark-grey);
  background: rgba(color(greyscale, grey), 0.8);
}
::selection {
  color: color(greyscale, dark-grey);
  background: rgba(color(greyscale, grey), 0.8);
}


* {
  @include breakpoint(max-width breakpoint-value(sm)) {
    ::-webkit-scrollbar {
      display: none;
    }
  }

  // Styles scrollbar if one appears
  ::-webkit-scrollbar {
    width: 4px;
    height: 2px;
  }

  ::-webkit-scrollbar-button {
    width: 0;
    height: 0;
  }

  ::-webkit-scrollbar-thumb {
    border: 0 {
      right: 1px solid color(greyscale, white);
      left: 1px solid color(greyscale, white);
    }
    border-radius: 0;
    background: transparent ;
    mix-blend-mode: difference;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: color(brand, grey);
  }

  ::-webkit-scrollbar-track {
    border: 0 none color(greyscale, white);
    border-radius: 50;
    background: transparent;
  }

  ::-webkit-scrollbar-corner {
    background: transparent;
  }
}

.App {
  overflow: hidden;
}

body {
  min-height: 100vh;
  height: 100vh;
  overflow-y: scroll;
  color: color(greyscale, dark-grey);
  background-color: darken(color(greyscale, dark-grey), 5%);
  font-family: font-family(primary);
  line-height: heading(default, line-height);

  @include gridlines(150px, 150px, 2px, 0px);
  @include font-size(heading(default, font-size));
}

main {
  // max-height: 100vh;
  // height: 100vh;
  // overflow-y: scroll;
}

hr {
  margin: 20px 0;
  border: 0;
  border-top: 1px solid color(greyscale, light-grey);
}

.blank {
  background-color: color(greyscale, white);
}

// Images
.img-responsive {
  display: block;
  max-width: 100%;
  height: auto;
}

// Helpers
.transition {
  @include transition(all 0.3s ease-in-out);
}

.faded {
  @include opacity(0.8);
}

.center,
.center-block {
  display: block;
  margin: 0 auto;
}

// Resets all styles on a button
.clear-button {
  text-rendering: auto;
  color: inherit;
  font-size: inherit;
  letter-spacing: normal;
  word-spacing: normal;
  text-transform: none;
  text-indent: 0;
  text-shadow: none;
  display: inline-block;
  text-align: inherit;
  margin: 0;
  padding: 0;
  background: none;
  outline: 0;
  border: 0;
  border-radius: 0;
  font-weight: inherit;
  cursor: pointer;
  width: inherit;
  font-family: inherit;
}

// Createing classes
@if infra-value(text) != false {
  @include infra-text();
}

@if infra-value(lists) != false {
  @include infra-lists();
}

@if infra-value(headings) != false {
  @include infra-headings();
}

@if infra-value(position) != false {
  @include infra-position();
}

// Vars for setup of grid system
$col-size: map-keys(get('grid, setup, breakpoints')) !default;
$grid-columns: get('grid, grid-columns');

@include flexbox-grid($col-size, $grid-columns);

// Checks to see if you want to import
@if infra-value(box-modal) != false {
  @include infra-box-modal(infra-value(box-modal), infra-value(box-modal-values));
}

@if infra-value(display) != false {
  @include infra-display(infra-value(display));
}

.main-content {
  padding-left: 0;
  padding-right: 0;
}

div[style^="opacity"] {
  @include transition(transform .2s ease-in-out);
}

.bg-white {
  background-color: color(greyscale, white);
}

blockquote {
  margin: 0;
  padding-left: 30px;
  border-left: 4px solid color(brand, danger);
}

.row {
  @extend .transition;
}
